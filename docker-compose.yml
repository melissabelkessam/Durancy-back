services:
  node:
    image: node:lts-slim
    working_dir: /src
    env_file:
      - .env
    command: /bin/sh -c "npm install nodemailer && npm install && npm audit fix --force && npx nodemon src/app.js"
    volumes:
      - ./src:/src
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  nginx:
    image: nginx:mainline-alpine
    restart: always
    ports:
      - "443:443"
    volumes:
      - ./nginx-conf/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx-conf/proxy_params:/etc/nginx/proxy_params
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    depends_on:
      - node
    networks:
      - app-network

  db:
    image: mariadb:lts
    restart: always
    healthcheck:
      interval: 30s
      retries: 3
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized"
        ]
      timeout: 30s
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - app-network

  pma:
    image: phpmyadmin/phpmyadmin
    ports:
      - '127.0.0.1:8081:80'
    restart: always
    depends_on:
      - db
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}
      PMA_ARBITRARY: 1
    networks:
      - app-network
  test:
    image: node:lts-slim
    working_dir: /src
    environment:
      - NODE_ENV=test
    command: /bin/sh -c "npm install --save-dev jest && npm install && npm run test"
    volumes:
      - ./src:/src
    networks:
      - app-network
    profiles:
      - test

volumes:
  mariadb_data:

networks:
  app-network:
